class Solution {
	public static boolean isValidSudoku(char[][] board) {
		for(int i = 0;i < 9;i++) {
			int[] map = new int[10];
			for(int j = 0;j < 9;j++) {
				if(board[i][j] != '.')
					map[board[i][j]-'0'] +=1;
				else
					map[0]++;
			}
			for(int k = 1;k < 9;k++)
				if(map[k] > 1)
					return false;
		}
		System.out.println("rowOK");
		for(int i = 0;i < 9;i++) {
			int[] map = new int[10];
			for(int j = 0;j < 9;j++) {
				if(board[j][i] != '.')
					map[board[j][i]-'0']+=1;
				else
					map[0]++;
			}
			for(int k = 1;k < 10;k++)
				if(map[k] > 1)
					return false;
		}
		System.out.println("colOK");
		for(int m = 0;m < 9;m+=3)
		for(int n = 0;n <9;n+=3) {
		int[] map = new int[10];
		for(int i = m;i -m< 3;i++) {
			for(int j = n;j -n< 3;j++) {
				if(board[i][j] != '.')
					map[board[i][j]-'0']+=1;
				else
					map[0]++;
			}
		}
		for(int k = 1;k < 9;k++)
			if(map[k] > 1)
				return false;
	}
		return true;
	}
	
	public static void main(String[] args) {
		char[][] board = {{'5','3','.','.','7','.','.','.','.'},
						  {'6','.','.','1','9','5','.','.','.'},
						  {'.','9','8','.','.','.','.','6','.'},
						  {'8','.','.','.','6','.','.','.','3'},
						  {'4','.','.','8','.','3','.','.','1'},
						  {'7','.','.','.','2','.','.','.','6'},
						  {'.','6','.','.','.','.','2','8','.'},
						  {'.','.','.','4','1','9','.','.','5'},
						  {'.','.','.','.','8','.','.','7','9'}};
		char[][] boaxd = {{'8','3','.','.','7','.','.','.','.'},
						  {'6','.','.','1','9','5','.','.','.'},
						  {'.','9','8','.','.','.','.','6','.'},
						  {'8','.','.','.','6','.','.','.','3'},
						  {'4','.','.','8','.','5','.','.','1'},
						  {'7','.','.','.','2','.','.','.','6'},
						  {'.','6','.','.','.','.','2','8','.'},
						  {'.','.','.','4','1','9','.','.','5'},
						  {'.','.','.','.','8','.','.','7','9'}};
		char[][] failcase = {{'.','.','.','.','.','.','.','.','.'},
							 {'.','.','.','.','.','.','.','.','.'},
							 {'.','9','.','.','.','.','.','.','1'},
						     {'8','.','.','.','.','.','.','.','.'},
						     {'.','9','9','3','5','7','.','.','.'},
							 {'.','.','.','.','.','.','.','4','.'},
							 {'.','.','.','8','.','.','.','.','.'},
							 {'.','1','.','.','.','.','4','.','9'},
							 {'.','.','.','5','.','4','.','.','.'}};
		boolean x = isValidSudoku(failcase);
		System.out.println(x);
	}
}